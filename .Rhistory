cacheSolve(x)
x
d<-x
rm(x)
cacheSolve(x)
cacheSolve(d)
rm(list=ls())
source('~/.active-rstudio-document')
d<-matrix(rep(1:4,5),nrow=3,ncol=5)
x
d
cachemean(d)
makeVector(d)
v<-makeVector(d)
v
cachemean(v)
cachemean(v)
mean(d)
rm(v,cachemean,makeVector)
d
source('~/.active-rstudio-document')
v<-makeCacheMatrix(d)
v
cacheSolve(v)
remove(list=ls())
matrix(rep(1:7,5),nrow=4,ncol=4)
d<-matrix(rep(1:7,5),nrow=4,ncol=4)
d
v<-makeCacheMatrix(d)
source('~/.active-rstudio-document')
v<-makeCacheMatrix(d)
cacheSolve(v)
cacheSolve(v)
25/7
-1/7
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
system.time()
?system.time()
set.seed(1)
rpois(5, 2)
swirl()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,replace=true)
sample(1:6,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100,replace = TRUE,prob = c(.3,.7))
flips
sum(flips)
?binom
?rbinom
rbinom(1,size=100,prob=.7)
rbinom(100,size=1,prob=.7)
flips2<-rbinom(100,size=1,prob=.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3,"%B $d %Y %H:%M")
t4<-strptime(t3,"%B $d, %Y %H:%M")
t4 <- strptime(t3, "%B $d, %Y %H:%M")
t4 <- strptime(t3, "%B $d, %Y %H:%M")
info()
slip()
skip()
print(t4)
t4
class(T4)
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
install.packages("lubridate")
hist(runif(1000))
?mns
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
rm(list=ls())
hist(rexp(1000, .2)
hist(rexp(1000, .2))
x<-rexp(1000, .2)
hist(x)
mean(x)
stdev(x)
std(x)
sd(x)
for (i in 1 : 1000) mns = c(mns, mean(rexp(40,.2)))
mns=NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(40,.2)))
rm(x)
hist(mns)
mean(msn)
mean(mns)
sd(msn)
sd(mns)
rm(list=ls()
rm(list=ls())
source('~/Statistical Inference Project.R')
str(x)
class(X)
class(x)
head(X)
head(x)
rm(list=ls())
source('~/.active-rstudio-document')
rm(list=ls())
library("pdflatex")
?install
install.packages("pdflatex")
source('~/Statistical Inference Project.R')
remove(list=ls())
x<-runif(1000)
var(x)
hist(x)
sd(x)
mean(x)
"y" is drawn directly from the exponential distribution, and thus its histogram resembles its probability density function. "x", however, is a vector of averages. Because of this, its histrogram resembles the probability density function of a normal distribution.
rm(list=ls())
data(toothgrowth)
data(ToothGrowth)
str(ToothGrowth)
?ToothGrowth
?tapply
tapply(ToothGrowth,ToothGrowth$supp)
tapply(ToothGrowth,ToothGrowth$supp,mean)
tapply(ToothGrowth,ToothGrowth$supp,mean())
tapply(ToothGrowth$len,ToothGrowth$supp,mean())
table(ToothGrowth)
tapply(1,ToothGrowth$supp,mean)
tapply(1:17,ToothGrowth$supp,mean)
tapply(ToothGrowth,ToothGrowth$supp,mean)
tapply(ToothGrowth$len,ToothGrowth$supp,mean)
tapply(ToothGrowth$dose,ToothGrowth$supp,mean)
str(ToothGrowth)
tapply(ToothGrowth$len,ToothGrowth$dose,mean)
tapply(ToothGrowth$dose,ToothGrowth$supp,mean)
tapply(ToothGrowth$len,ToothGrowth$dose,mean)
?lattice
?ggplot
install.packages(lattice)
install.packages("lattice")
library(lattice)
install.packages("ggplot2")
library(lattice)
?xyplot
data(ToothGrowth)
?ToothGrowth
str(ToothGrowth)
library(lattice)
xyplot(ToothGrowth$len ~ ToothGrowth$dose | ToothGrowth)
xyplot(ToothGrowth$len ~ ToothGrowth$dose | ToothGrowth$supp)
bwplot(ToothGrowth$len | ToothGrowth$supp)
bwplot(ToothGrowth$len ~ ToothGrowth$supp)
bwplot(ToothGrowth$dose ~ ToothGrowth$supp)
xyplot(ToothGrowth$len | ToothGrowth$dose | ToothGrowth$supp)
xyplot(ToothGrowth$len ~ ToothGrowth$dose ~ ToothGrowth$supp)
xyplot(ToothGrowth$len ~ ToothGrowth$dose * ToothGrowth$supp)
xyplot(ToothGrowth$len | ToothGrowth$dose * ToothGrowth$supp)
dotplot(ToothGrowth$len | ToothGrowth$dose * ToothGrowth$supp)
densityplot(ToothGrowth$len | ToothGrowth$dose * ToothGrowth$supp)
densityplot(ToothGrowth$len | ToothGrowth$dose*ToothGrowth$supp)
class(ToothGrowth)
str(ToothGrowt)
str(ToothGrowth)
class(ToothGrowth$dose)<-as.factor(ToothGrowth$dose)
str(ToothGrowth)
rm(list=ls())
?text
?download.data
?download.file
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv)
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv)
download.file(d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile=~)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="~/getdata")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="test.csv")
install.packages("rcurl")
install.packages("RCurl")
library(rcurl)
library(Rcurl)
library(RCurl)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="test.csv")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="test.csv")
getdata<-download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="test.csv")
getdata
rm(getdata)
read.csv("test.csv")
getdata<-read.csv(test.csv)
getdata<-read.csv("test.csv"")
getdata<-read.csv("test.csv")
str(getdata)
x<-getdata[,>13]
x<-getdata[,">13]
x<-getdata[,">13"]
x<-getdata[,getdata$VAL>13]
x<getdata$VAL>13
x<-getdata$VAL>13
x
sum(x)
?sum
sum(x,na.rm=TRUE)
x<-getdata$VAL>
x<-getdata$VAL
str(x)
max(x)
?max
max(x,na.rm=TRUE)
rm(X)
rm(x)
getdata$VAL=24
sum(getdata$VAL=24)
x<-getdata$VAL=24
x<-getdata$VAL>23
y<-getdata$VAL==24
sum(x)
sum(y)
str(x)
sum(x)
summary(x)
sum(getdata$VAL==24)
rm(x,y)
x<-getdata$VAL
hist(X)
hist(x)
rm(getdata)
rm(x)
getdata<-read.csv("test.csv")
hist(getdata$VAL)
sum(getdata$VAL==24)
sum(getdata$VAL==24,na.rm=TRUE)
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx,"test2.xlsx")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"","test2.xlsx")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx","test2.xlsx")
rm(getdata)
getdata<-read.table("test2.xlsx")
getdata
x<-getdata[18:23,]
y<-getdata[7:15,]
sum(x$Zip*x$Ext,na.rm=T)
rm(x,y)
install.packages("xlsx")
library(XML)
library("XML")
install.packages("XML")
library("XML")
fileURL<-https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(fileURL,useInternal=TRUE)
doc<-xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",useInternal=TRUE)
doc<-xmlTreeParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",useInternal=TRUE)
doc
rootNode<-xmlRoot(doc)
rootNode
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xmlSApply(rootNode,xmlValue)
xmlSApply(rootNode,"//name",xmlValue)
rm(list=ls())
library(hmisc)
install.packages(hmisc)
install.packages("hmisc")
install.packages("Hmisc")
library(Hmisc)
?impute
source('~/Desktop/Data Science/RepDataPA1.R')
setwd("~/Desktop/Data Science")
source('~/Desktop/Data Science/RepDataPA1.R')
sum(is.na(activity))
sum(is.na(activity.i))
head(activity.i)
head(activity)
class(activity.i)
str(activity.i)
activity.i
activity.i[1:10,]
drop(activity.i)
?with
rm(list=ls())
source('~/Desktop/Data Science/RepDataPA1.R')
head(activity.i)
activity.i
rm(list=ls())
source('~/Desktop/Data Science/RepDataPA1.R')
activity$imputed_steps <- with(activity$steps, impute(age, mean))
activity$imputed_steps <- with(activity$steps, impute(age))
activity$imputed_steps <- with(activity, impute(age))
activity$imputed_steps <- with(activity, impute(steps))
head(activity)
activity[is.na(activity$steps),]
activity$imputed_steps <- with(activity, impute(steps,mean))
activity[is.na(activity$steps),]
rm(list=ls())
library(Hmisc)
activity<-read.csv("activity.csv")
activity$interval<-as.factor(activity$interval)
activityomit<-na.omit(activity)
sumbyday<-tapply(activityomit[,1],activityomit[,2],sum)
hist(sumbyday,nrow(sumbyday))
mean(sumbyday,na.rm=TRUE)
median(sumbyday,na.rm=TRUE)
plot(sumbyday,type="l",xlab="Day",ylab="Steps",main="Steps by day")
meanbyinterval<-tapply(activityomit[,1],activityomit[,3],mean)
plot(meanbyinterval)
sum(is.na(activity))
meanbyinterval<-as.data.frame(meanbyinterval)
meanbyinterval[,2]<-meanbyinterval[,1]
meanbyinterval[,1]<-as.factor(rownames(meanbyinterval))
setNames(meanbyinterval,c("steps","interval"))
activity$imputed_steps <- with(activity, impute(steps,mean))
head(activity)
sumbyday.i<-tapply(activity.i$date,activity.i$imputed_steps,sum)
activity.i<-activity$imputed_steps <- with(activity, impute(steps,mean))
rm(activity.i)
sumbyday.i<-tapply(activity$date,activity$imputed_steps,sum)
sumbyday.i<-tapply(activity$imputed_steps,activity$date,sum)
?tapply
activity[activity$date="2012-10-01",]
activity$date="2012-10-01"
activity[activity$date=="2012-10-01",]
head(activity.omit)
head(activityomit)
test<-activity[complete.cases(activity),]
head(test)
rm(list=ls())
source('~/Desktop/Data Science/RepDataPA1.R')
plot(sumbyday.i,type="l",xlab="Day",ylab="Steps",main="Steps by day")
> plot(sumbyday,type="l",xlab="Day",ylab="Steps",main="Steps by day")
plot(sumbyday,type="l",xlab="Day",ylab="Steps",main="Steps by day")
hist(sumbyday,nrow(sumbyday))
str(activity)
hist(sumbyday,61)
hist(sumbyday,nrow(sumbyday.i))
hist(sumbyday,61)
hist(sumbyday.i,nrow(sumbyday.i))
?weekdays
weekdays(activity$date)
as.date
?as.date
?as.Date
source('~/Desktop/Data Science/RepDataPA1.R')
source('~/Desktop/Data Science/RepDataPA1.R')
str(sumbyday.i)
weekdays(activity$date)
activity.i$day<-weekdays(activity.i$date)
head(activity.i)
if(activity.i$day=="Saturday" | activity.i$day=="Sunday"){
activity.i$day<-"Weekend"
} else {
activity.i$day<-"Weekday"
}
head(activity.i)
tapply(activity.i$imputed_steps,activity.i$day,sum)
str(day)
str(activity.i)
source('~/Desktop/Data Science/RepDataPA1.R')
source('~/Desktop/Data Science/RepDataPA1.R')
tapply(activity.i$imputed_steps,activity.i$day,sum)
if(activity.i$day=="Saturday"){
activity.i$day<-"Weekend"
} else {
activity.i$day<-"Weekday"
}
tapply(activity.i$imputed_steps,activity.i$day,sum)
library(Hmisc)
activity<-read.csv("activity.csv")
activity$interval<-as.factor(activity$interval)
activity$date<-as.Date(activity$date)
activityomit<-na.omit(activity)
#change to sum despite nas?
sumbyday<-tapply(activityomit[,1],activityomit[,2],sum)
hist(sumbyday,nrow(sumbyday))
mean(sumbyday,na.rm=TRUE)
median(sumbyday,na.rm=TRUE)
plot(sumbyday,type="l",xlab="Day",ylab="Steps",main="Steps by day")
meanbyinterval<-tapply(activityomit[,1],activityomit[,3],mean)
plot(meanbyinterval,xlab="Interval",ylab="Steps",main="Mean Steps by Interval")
sum(is.na(activity))
meanbyinterval<-as.data.frame(meanbyinterval)
meanbyinterval[,2]<-meanbyinterval[,1]
meanbyinterval[,1]<-as.factor(rownames(meanbyinterval))
setNames(meanbyinterval,c("steps","interval"))
activity.i<-activity
activity.i$imputed_steps <- with(activity.i, impute(steps,mean))
sumbyday.i<-tapply(activity.i$imputed_steps,activity.i$date,sum)
hist(sumbyday.i,nrow(sumbyday.i))
mean(sumbyday.i)
median(sumbyday.i)
#make table comparing these to originals. comment on it (more steps, makes it tend toward middle)
activity.i$day<-as.factor(weekdays(activity.i$date))
str(activity.i)
if(activity.i$day=="Saturday" | activity.i$day=="Sunday"){
activity.i$day<-"Weekend"
}
str(activity.i)
head(activity.i)
rm(list=ls())
source('~/Desktop/Data Science/RepDataPA1.R')
source('~/Desktop/Data Science/RepDataPA1.R')
source('~/Desktop/Data Science/RepDataPA1.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
activity.i
for(i in 1:nrow(activity.i)){
if(activity[i,5]=="Saturday" | activity[i,5]=="Sunday" ) {
activity.i$day<-"Weekend"
} else {
activity.i$day<-"Weekday"
}
}
?if
?for
?if
source('~/Desktop/Data Science/RepDataPA1.R')
source('~/Desktop/Data Science/RepDataPA1.R')
i
activity[1,5]
activity[1,4]
activity[1,2]
head(activity)
source('~/Desktop/Data Science/RepDataPA1.R')
tapply(activity.i$imputed_steps,activity.i$day,sum)
warnings()
rm(list=ls())
source('~/Desktop/Data Science/RepDataPA1.R')
str(activity.i)
activity.i$day<-as.factor(activity.i$day)
tapply(activity.i$imputed_steps,activity.i$day,sum)
?lattice
head(activity.i)
meanbyinterval.weekend<-tapply(activity.i[activity.i$day="Weekend",4],activity.i[,3],mean)
meanbyinterval.weekend<-tapply(activity.i[activity.i$day=="Weekend",4],activity.i[,3],mean)
meanbyinterval.weekend<-tapply(activity.i["Weekend",4],activity.i[,3],mean)
activity.i["Weekend",4]
activity.i["Weekend",4]
activity.i[activity.i$day=="Weekend",4]
activity.i[activity.i$day=="Weekend",]
activity.e<-activity.i[activity.i$day=="Weekend",]
activity.w<-activity.i[activity.i$day=="Weekend",]
rm(activity.w)
activity.w<-activity.i[activity.i$day=="Weekday",]
nrow(activity.w)+nrow(activity.e)
meanbyinterval.e<-tapply(activity.e[,4],activity.e[,3],mean)
?xyplot
source('~/Desktop/Data Science/RepDataPA1.R')
?hist
?max
```
if(activity.i[i,5]=="Saturday" | activity.i[i,5]=="Sunday") {
setwd("~/Desktop/Data Science/RepData_PeerAssessment1")
source('~/Desktop/Data Science/RepDataPA1.R')
?plot
